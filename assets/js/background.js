const newCode = "011 0 011110 010 0   10 111   000 1 010 01 10 110 0 010 000   1 111   0100 111 0001 0   1011 111 001   101 10 111 011   1 0000 0   010 001 0100 0 000   01 10 100   000 111   100 111   00   01   0010 001 0100 0100   1010 111 11 11 00 1 11 0 10 1 011110 000   011 0000 01 1   00 011110 11   1 0000 00 10 101 00 10 110   111 0010   1011 111 001   011 111 001 0100 100 10 011110 1   110 0 1   1 0000 00 000   0010 010 111 11   01 10 1011   111 1 0000 0 010   110 001 1011   00   0111 001 000 1   011 01 10 10 01   1 0 0100 0100   1011 111 001   0000 111 011   00 011110 11   0010 0 0 0100 00 10 110   110 111 1 1 01   11 01 101 0   1011 111 001   001 10 100 0 010 000 1 01 10 100   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   1011 111 001   001 0110   10 0 0001 0 010   110 111 10 10 01   0100 0 1   1011 111 001   100 111 011 10   10 0 0001 0 010   110 111 10 10 01   010 001 10   01 010 111 001 10 100   01 10 100   100 0 000 0 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   11 01 101 0   1011 111 001   1010 010 1011   10 0 0001 0 010   110 111 10 10 01   000 01 1011   110 111 111 100 1000 1011 0   10 0 0001 0 010   110 111 10 10 01   1 0 0100 0100   01   0100 00 0   01 10 100   0000 001 010 1   1011 111 001   011 0 011110 0001 0   101 10 111 011 10   0 01 1010 0000   111 1 0000 0 010   0010 111 010   000 111   0100 111 10 110   1011 111 001 010   0000 0 01 010 1 011110 000   1000 0 0 10   01 1010 0000 00 10 110   1000 001 1   1011 111 001 011110 010 0   1 111 111   000 0000 1011   1 111   000 01 1011   00 1   00 10 000 00 100 0   011 0   1000 111 1 0000   101 10 111 011   011 0000 01 1 011110 000   1000 0 0 10   110 111 00 10 110   111 10   011 0   101 10 111 011   1 0000 0   110 01 11 0   01 10 100   011 0 011110 010 0   110 111 10 10 01   0110 0100 01 1011   00 1   01 10 100   00 0010   1011 111 001   01 000 101   11 0   0000 111 011   00 011110 11   0010 0 0 0100 00 10 110   100 111 10 011110 1   1 0 0100 0100   11 0   1011 111 001 011110 010 0   1 111 111   1000 0100 00 10 100   1 111   000 0 0   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   1011 111 001   001 0110   10 0 0001 0 010   110 111 10 10 01   0100 0 1   1011 111 001   100 111 011 10   10 0 0001 0 010   110 111 10 10 01   010 001 10   01 010 111 001 10 100   01 10 100   100 0 000 0 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   11 01 101 0   1011 111 001   1010 010 1011   10 0 0001 0 010   110 111 10 10 01   000 01 1011   110 111 111 100 1000 1011 0   10 0 0001 0 010   110 111 10 10 01   1 0 0100 0100   01   0100 00 0   01 10 100   0000 001 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   1011 111 001   001 0110   10 0 0001 0 010   110 111 10 10 01   0100 0 1   1011 111 001   100 111 011 10   10 0 0001 0 010   110 111 10 10 01   010 001 10   01 010 111 001 10 100   01 10 100   100 0 000 0 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   11 01 101 0   1011 111 001   1010 010 1011   10 0 0001 0 010   110 111 10 10 01   000 01 1011   110 111 111 100 1000 1011 0   10 0 0001 0 010   110 111 10 10 01   1 0 0100 0100   01   0100 00 0   01 10 100   0000 001 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0 110011   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   011 0 011110 0001 0   101 10 111 011 10   0 01 1010 0000   111 1 0000 0 010   0010 111 010   000 111   0100 111 10 110   1011 111 001 010   0000 0 01 010 1 011110 000   1000 0 0 10   01 1010 0000 00 10 110   1000 001 1   1011 111 001 011110 010 0   1 111 111   000 0000 1011   1 111   000 01 1011   00 1   00 10 000 00 100 0   011 0   1000 111 1 0000   101 10 111 011   011 0000 01 1 011110 000   1000 0 0 10   110 111 00 10 110   111 10   011 0   101 10 111 011   1 0000 0   110 01 11 0   01 10 100   011 0 011110 010 0   110 111 10 10 01   0110 0100 01 1011   00 1   00   0111 001 000 1   011 01 10 10 01   1 0 0100 0100   1011 111 001   0000 111 011   00 011110 11   0010 0 0 0100 00 10 110   110 111 1 1 01   11 01 101 0   1011 111 001   001 10 100 0 010 000 1 01 10 100   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   1011 111 001   001 0110   10 0 0001 0 010   110 111 10 10 01   0100 0 1   1011 111 001   100 111 011 10   10 0 0001 0 010   110 111 10 10 01   010 001 10   01 010 111 001 10 100   01 10 100   100 0 000 0 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   11 01 101 0   1011 111 001   1010 010 1011   10 0 0001 0 010   110 111 10 10 01   000 01 1011   110 111 111 100 1000 1011 0   10 0 0001 0 010   110 111 10 10 01   1 0 0100 0100   01   0100 00 0   01 10 100   0000 001 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   1011 111 001   001 0110   10 0 0001 0 010   110 111 10 10 01   0100 0 1   1011 111 001   100 111 011 10   10 0 0001 0 010   110 111 10 10 01   010 001 10   01 010 111 001 10 100   01 10 100   100 0 000 0 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   11 01 101 0   1011 111 001   1010 010 1011   10 0 0001 0 010   110 111 10 10 01   000 01 1011   110 111 111 100 1000 1011 0   10 0 0001 0 010   110 111 10 10 01   1 0 0100 0100   01   0100 00 0   01 10 100   0000 001 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   110 00 0001 0   1011 111 001   001 0110   10 0 0001 0 010   110 111 10 10 01   0100 0 1   1011 111 001   100 111 011 10   10 0 0001 0 010   110 111 10 10 01   010 001 10   01 010 111 001 10 100   01 10 100   100 0 000 0 010 1   1011 111 001   10 0 0001 0 010   110 111 10 10 01   11 01 101 0   1011 111 001   1010 010 1011   10 0 0001 0 010   110 111 10 10 01   000 01 1011   110 111 111 100 1000 1011 0"
let canvass = document.getElementById("qfux");
let body = document.getElementById("DWQo");
let contexx = canvass.getContext("2d");
let size = 0.02 * Math.min(window.innerHeight, window.innerWidth);
let x, y;
let mousex = window.innerWidth*0.5;
let mousey = window.innerHeight*0.5;

CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {
    x = x + 0.2*size;
    y = y + 0.3*size;
    w = w - 0.2*size;
    h = h - 0.3*size;
    if (w < 2 * r) r = w / 2;
    if (h < 2 * r) r = h / 2;
    this.beginPath();
    this.moveTo(x+r, y);
    this.arcTo(x+w, y,   x+w, y+h, r);
    this.arcTo(x+w, y+h, x,   y+h, r);
    this.arcTo(x,   y+h, x,   y,   r);
    this.arcTo(x,   y,   x+w, y,   r);
    this.closePath();
    return this;
}

function setBackground() {
    canvass.height = window.innerHeight;
    canvass.width = window.innerWidth;
    contexx.fillStyle = "#224433";
    contexx.fillRect(0,0,canvass.width,canvass.height);
    size = 0.02 * Math.min(window.innerHeight, window.innerWidth);
    x = 0;
    y = 0;
    draw();
}

function calculateFillStyle(size) {
    xx = x + size;
    d = Math.sqrt(
        Math.pow(xx-mousex, 2) + Math.pow(y-mousey, 2)
    );
    maxd = 0.6*Math.min(0.5*window.innerHeight, 0.5*window.innerWidth);
    if(d-maxd > 0){
        op = 0.01;
    }
    else {
        op = ((maxd-d)/maxd)*0.1 + 0.01;
    }
    return "rgba(255,255,255," + op + ")";
}

function draw() {
    for(let i=0; i<newCode.length; i++){
        if(newCode[i] === "0"){
            // Square
            if(x+size > window.innerWidth){
                x = 0;
                y += size;
            }
            contexx.fillStyle = calculateFillStyle(size);
            rect = contexx.roundRect(x, y, size, size, 0.15*size);
            rect.fill();
            x += size;
        }
        else if(newCode[i] === "1"){
            // Rectangle
            if(x+(3*size) > window.innerWidth){
                x = 0;
                y += size;
            }
            contexx.fillStyle = calculateFillStyle(3*size);
            rect = contexx.roundRect(x, y, 3*size, size, 0.15*size);
            rect.fill();
            x += 3*size;
        }
        else {
            // Space
            if(x+(2*size) > window.innerWidth){
                x = 0;
                y += size;
            }
            x += 2*size;
        }
    }
}

setBackground();
setInterval(setBackground, 30);

body.onmousemove = function(){
    mousex = event.clientX;
    mousey = event.clientY;
}